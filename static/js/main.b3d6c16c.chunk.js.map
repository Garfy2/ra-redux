{"version":3,"sources":["actions/actionTypes.js","actions/actionCreators.js","components/ServiceForm.js","components/ServiceFilter.js","components/ServiceList.js","App.js","reducers/serviceList.js","reducers/serviceForm.js","reducers/serviceFilter.js","store/index.js","index.js"],"names":["ADD_SERVICE","REMOVE_SERVICE","CHANGE_SERVICE_FIELD","FILTER_SERVICE","CHANGE_FILTER_FIELD","filterService","setFilter","type","payload","changeServiceField","name","value","changeFilterField","filter","ServiceForm","item","useSelector","state","serviceForm","dispatch","useDispatch","resetForm","handleChange","evt","target","onSubmit","id","price","preventDefault","onReset","onChange","ServiceFilter","serviceFilter","activeFilter","serviceList","ServiceList","services","filtered","handleRemove","removeId","itemsList","length","map","o","onClick","editId","editItem","find","handleEdit","App","initialState","nanoid","reducer","combineReducers","action","editing","service","Number","filteredServices","toLowerCase","includes","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3d6c16c.chunk.js","sourcesContent":["export const ADD_SERVICE = 'ADD_SERVICE';\nexport const REMOVE_SERVICE = 'REMOVE_SERVICE';\nexport const CHANGE_SERVICE_FIELD = 'CHANGE_SERVICE_FIELD';\nexport const FILTER_SERVICE = 'FILTER_SERVICE';\nexport const CHANGE_FILTER_FIELD = 'CHANGE_FILTER_FIELD';\n","import { ADD_SERVICE, REMOVE_SERVICE, FILTER_SERVICE, CHANGE_SERVICE_FIELD, CHANGE_FILTER_FIELD } from './actionTypes';\n\nexport function addService(id, name, price) {\n  return {type: ADD_SERVICE, payload: {id, name, price}};\n}\n\nexport function removeService(removeId) {\n  return { type: REMOVE_SERVICE, payload: {removeId}};\n}\n\nexport function filterService(setFilter) {\n  return {type: FILTER_SERVICE, payload: {setFilter}};\n}\n\nexport function changeServiceField(name, value) {\n  return {type: CHANGE_SERVICE_FIELD, payload: {name, value}}\n}\n\nexport function changeFilterField(filter) {\n  return {type: CHANGE_FILTER_FIELD, payload: {filter}}\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeServiceField, addService } from '../actions/actionCreators';\n\nexport default function ServiceForm() {\n  const item = useSelector((state) => state.serviceForm);\n  const dispatch = useDispatch();\n\n  const resetForm = () => {\n    dispatch(changeServiceField('id', ''));\n    dispatch(changeServiceField('name', ''));\n    dispatch(changeServiceField('price', ''));\n  };\n\n  const handleChange = (evt) => {\n    const { name, value } = evt.target;\n    dispatch(changeServiceField(name, value));\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    dispatch(addService(item.id, item.name, item.price));\n    resetForm();\n  };\n\n  const handleReset = (evt) => {\n    resetForm();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} onReset={handleReset}>\n\t\t\t<h2>{item.id? 'Edit' : 'Add'} service:</h2>\n      <input name=\"name\" onChange={handleChange} value={item.name} />\n      <input name=\"price\" onChange={handleChange} value={item.price} />\n      <button type=\"submit\">Save</button>\n      {item.id && <button type=\"reset\">Cancel</button>}\n    </form>\n  );\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilterField, filterService } from '../actions/actionCreators';\n\nfunction ServiceFilter() {\n  const {filter} = useSelector((state) => state.serviceFilter);\n  const {activeFilter} = useSelector((state) => state.serviceList);\n  const dispatch = useDispatch();\n\n  const resetFilter = () => {\n    dispatch(changeFilterField(''));\n    dispatch(filterService(''));\n  };\n\n  const handleChange = (evt) => {\n    const { value } = evt.target;\n    dispatch(changeFilterField(value));\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    dispatch(filterService(filter));\n  };\n\n  const handleReset = () => {\n    resetFilter();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} onReset={handleReset}>\n      <h2>Filter services:</h2>\n      <div>Active filter: <span>{activeFilter || 'NO'}</span></div>      \n      <input name=\"filter\" onChange={handleChange} value={filter} />\n      <button type=\"submit\">Set</button>\n      <button type=\"reset\">Clear</button>\n    </form>\n  );\n}\n\nexport default ServiceFilter;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeService, changeServiceField } from '../actions/actionCreators';\n\nfunction ServiceList() {\n  const { services, filtered } = useSelector((state) => state.serviceList);\n  const dispatch = useDispatch();\n\n  const resetForm = () => {\n    dispatch(changeServiceField('id', ''));\n    dispatch(changeServiceField('name', ''));\n    dispatch(changeServiceField('price', ''));\n  };\n\n  const handleRemove = (id) => {\n    dispatch(removeService(id));\n    resetForm();\n  };\n\n  const handleEdit = (editId) => {\n    const editItem = services.find((item) => item.id === editId);\n    const { id, name, price } = editItem;\n    dispatch(changeServiceField('id', id));\n    dispatch(changeServiceField('name', name));\n    dispatch(changeServiceField('price', price));\n  };\n\n const items = filtered.length ? filtered : services;\n  const itemsList = items.map((o) => (\n    <li key={o.id}>\n      {o.name} {o.price}\n      <button onClick={() => handleEdit(o.id)}>✎</button>\n      <button onClick={() => handleRemove(o.id)}>✕</button>\n    </li>\n  ));\n\n  return <ul>{itemsList}</ul>;\n}\n\nexport default ServiceList;\n","import React from 'react';\nimport ServiceForm from './components/ServiceForm';\nimport ServiceFilter from './components/ServiceFilter';\nimport ServiceList from './components/ServiceList';\nimport 'mini.css';\n\nfunction App() {\n  return (\n    <>\n      <ServiceForm />\n      <ServiceFilter />\n      <ServiceList />\n    </>\n  );\n}\n\nexport default App;\n","import { nanoid } from 'nanoid';\nimport {\n  ADD_SERVICE,\n  REMOVE_SERVICE,\n  FILTER_SERVICE,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  services: [\n    { id: nanoid(), name: 'Замена стекла', price: 21000 },\n    { id: nanoid(), name: 'Замена дисплея', price: 25000 },\n  ],\n  filtered: [],\n  activeFilter: '',\n};\n\nexport default function serviceListReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_SERVICE:\n      const { id, name, price } = action.payload;\n      if (id) {\n        const editing = state.services.find((service) => service.id === id);\n        editing.name = name;\n        editing.price = price;\n        return { ...state };\n      }\n      return {\n        ...state,\n        services: [\n          ...state.services,\n          { id: nanoid(), name, price: Number(price) },\n        ],\n      };\n    case REMOVE_SERVICE:\n      const { removeId } = action.payload;\n      return {\n        ...state,\n        services: state.services.filter((service) => service.id !== removeId),\n        filtered: state.filtered.filter((service) => service.id !== removeId),\n      };\n    case FILTER_SERVICE:\n      const { setFilter } = action.payload;\n      if (!setFilter) return { ...state, activeFilter: '', filtered: [] };\n      const filteredServices = state.services.filter((service) =>\n        service.name.toLowerCase().includes(setFilter.toLowerCase())\n      );\n      return {\n        ...state,\n        activeFilter: setFilter,\n        filtered: filteredServices,\n      };\n    default:\n      return state;\n  }\n}\n","import { CHANGE_SERVICE_FIELD } from '../actions/actionTypes';\n\nconst initialState = {\n  id: '',\n  name: '',\n  price: '',\n};\n\nexport default function serviceFormReducer(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_SERVICE_FIELD:\n      const { name, value } = action.payload;\n      return { ...state, [name]: value };\n    default:\n      return state;\n  }\n}\n","import { CHANGE_FILTER_FIELD } from '../actions/actionTypes';\n\nconst initialState = {\n  filter: ''\n};\n\nexport default function serviceFilterReducer(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_FILTER_FIELD:\n      const { filter } = action.payload;\n      return { ...state, filter };\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers } from \"redux\";\nimport serviceListReducer from '../reducers/serviceList';\nimport serviceFormReducer from '../reducers/serviceForm';\nimport serviceFilterReducer from '../reducers/serviceFilter';\n\nconst reducer = combineReducers({\n  serviceList: serviceListReducer,\n  serviceForm: serviceFormReducer,\n  serviceFilter: serviceFilterReducer,\n});\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport store from './store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}